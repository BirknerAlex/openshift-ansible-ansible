---

- name: Create volumes directory
  file:
    state: directory
    path: "{{ openshift_localstorage_basedir }}"
    seuser: unconfined_u
    serole: object_r
    setype: container_file_t

- name: Create custom volumes directories
  file:
    state: directory
    path: "{{ item }}"
    seuser: unconfined_u
    serole: object_r
    setype: container_file_t
  loop: "{{ openshift_localstorage_custom_dirs }}"

- name: Template local-storage PV template
  template:
    src: pv.yaml.j2
    dest: "{{ openshift_ansible_tmp }}/pv.yaml"

- name: Create volumes
  shell: echo {0..{{ openshift_localstorage_num_volumes }}} | xargs -d ' ' -n 1 -I '{}' mkdir -p '{{ openshift_localstorage_basedir }}/vol{}'
  args:
    creates: "{{ openshift_localstorage_basedir }}/vol{{ openshift_localstorage_num_volumes - 1}}"

- name: Create PVs
  shell: echo {0..{{ openshift_localstorage_num_volumes }}} | xargs -d ' ' -n 1 -I '{}' sed 's/<name>/vol{}/' {{ openshift_ansible_tmp }}/pv.yaml | oc create -f -
  # will fail when volumes already exist
  failed_when: no

- name: Template local-storage storage class
  template:
    src: storage-class.yaml.j2
    dest: "{{ openshift_ansible_tmp }}/storage-class.yaml"

- name: Apply local-storage storage class
  shell: oc apply -f "{{ openshift_ansible_tmp }}/storage-class.yaml"
